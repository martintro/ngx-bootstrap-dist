{"version":3,"sources":["../../.tmp/pagination/pager.component.ts"],"names":[],"mappings":"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","file":"pager.component.js","sourceRoot":"","sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  Renderer2,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  forwardRef, ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { PageChangedEvent } from './pagination.component';\r\nimport { PaginationConfig } from './pagination.config';\r\n\r\nexport const PAGER_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  // tslint:disable-next-line\r\n  useExisting: forwardRef(() => PagerComponent),\r\n  multi: true\r\n};\r\n\r\n\r\nexport class PagerComponent implements ControlValueAccessor, OnInit {\r\n  config: any;\r\n  /** if `true` aligns each link to the sides of pager */\r\n   align: boolean;\r\n  /** limit number for page links in pager */\r\n   maxSize: number;\r\n  /** if false first and last buttons will be hidden */\r\n   boundaryLinks: boolean;\r\n  /** if false previous and next buttons will be hidden */\r\n   directionLinks: boolean;\r\n  // labels\r\n  /** first button text */\r\n   firstText: string;\r\n  /** previous button text */\r\n   previousText: string;\r\n  /** next button text */\r\n   nextText: string;\r\n  /** last button text */\r\n   lastText: string;\r\n  /** if true current page will in the middle of pages list */\r\n   rotate: boolean;\r\n  // css\r\n  /** add class to <li> */\r\n   pageBtnClass: string;\r\n\r\n  /** if true pagination component will be disabled */\r\n   disabled: boolean;\r\n\r\n  /** fired when total pages count changes, $event:number equals to total pages count */\r\n   numPages: EventEmitter<number> = new EventEmitter<number>();\r\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to\r\n   * object with current page index and number of items per page\r\n   */\r\n  \r\n  pageChanged: EventEmitter<PageChangedEvent> = new EventEmitter<PageChangedEvent>();\r\n\r\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\r\n  \r\n  get itemsPerPage(): number {\r\n    return this._itemsPerPage;\r\n  }\r\n\r\n  set itemsPerPage(v: number) {\r\n    this._itemsPerPage = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  /** total number of items in all pages */\r\n  \r\n  get totalItems(): number {\r\n    return this._totalItems;\r\n  }\r\n\r\n  set totalItems(v: number) {\r\n    this._totalItems = v;\r\n    this.totalPages = this.calculateTotalPages();\r\n  }\r\n\r\n  get totalPages(): number {\r\n    return this._totalPages;\r\n  }\r\n\r\n  set totalPages(v: number) {\r\n    this._totalPages = v;\r\n    this.numPages.emit(v);\r\n    if (this.inited) {\r\n      this.selectPage(this.page);\r\n    }\r\n  }\r\n\r\n  set page(value: number) {\r\n    const _previous = this._page;\r\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\r\n    this.changeDetection.markForCheck();\r\n\r\n    if (_previous === this._page || typeof _previous === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    this.pageChanged.emit({\r\n      page: this._page,\r\n      itemsPerPage: this.itemsPerPage\r\n    });\r\n  }\r\n\r\n  get page(): number {\r\n    return this._page;\r\n  }\r\n\r\n  onChange: any = Function.prototype;\r\n  onTouched: any = Function.prototype;\r\n\r\n  classMap: string;\r\n  pages: any[];\r\n\r\n  protected _itemsPerPage: number;\r\n  protected _totalItems: number;\r\n  protected _totalPages: number;\r\n  protected inited = false;\r\n  protected _page = 1;\r\n\r\n  constructor(private renderer: Renderer2,\r\n              private elementRef: ElementRef,\r\n              paginationConfig: PaginationConfig,\r\n              private changeDetection: ChangeDetectorRef) {\r\n    this.renderer = renderer;\r\n    this.elementRef = elementRef;\r\n    if (!this.config) {\r\n      this.configureOptions(\r\n        Object.assign({}, paginationConfig.main, paginationConfig.pager)\r\n      );\r\n    }\r\n  }\r\n\r\n  configureOptions(config: any): void {\r\n    this.config = Object.assign({}, config);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof window !== 'undefined') {\r\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\r\n    }\r\n    // watch for maxSize\r\n    this.maxSize =\r\n      typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\r\n    this.rotate =\r\n      typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\r\n    this.boundaryLinks =\r\n      typeof this.boundaryLinks !== 'undefined'\r\n        ? this.boundaryLinks\r\n        : this.config.boundaryLinks;\r\n    this.directionLinks =\r\n      typeof this.directionLinks !== 'undefined'\r\n        ? this.directionLinks\r\n        : this.config.directionLinks;\r\n    this.pageBtnClass =\r\n      typeof this.pageBtnClass !== 'undefined'\r\n        ? this.pageBtnClass\r\n        : this.config.pageBtnClass;\r\n\r\n    // base class\r\n    this.itemsPerPage =\r\n      typeof this.itemsPerPage !== 'undefined'\r\n        ? this.itemsPerPage\r\n        : this.config.itemsPerPage;\r\n    this.totalPages = this.calculateTotalPages();\r\n    // this class\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n    this.inited = true;\r\n  }\r\n\r\n  writeValue(value: number): void {\r\n    this.page = value;\r\n    this.pages = this.getPages(this.page, this.totalPages);\r\n  }\r\n\r\n  getText(key: string): string {\r\n    return (this as any)[`${key}Text`] || this.config[`${key}Text`];\r\n  }\r\n\r\n  noPrevious(): boolean {\r\n    return this.page === 1;\r\n  }\r\n\r\n  noNext(): boolean {\r\n    return this.page === this.totalPages;\r\n  }\r\n\r\n  registerOnChange(fn: (_: any) => {}): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => {}): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  selectPage(page: number, event?: Event): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (!this.disabled) {\r\n      if (event && event.target) {\r\n        const target: any = event.target;\r\n        target.blur();\r\n      }\r\n      this.writeValue(page);\r\n      this.onChange(this.page);\r\n    }\r\n  }\r\n\r\n  // Create page object used in template\r\n  protected makePage(num: number,\r\n                     text: string,\r\n                     active: boolean): { number: number; text: string; active: boolean } {\r\n    return {text, number: num, active};\r\n  }\r\n\r\n  protected getPages(currentPage: number, totalPages: number): any[] {\r\n    const pages: any[] = [];\r\n\r\n    // Default page limits\r\n    let startPage = 1;\r\n    let endPage = totalPages;\r\n    const isMaxSized =\r\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\r\n\r\n    // recompute if maxSize\r\n    if (isMaxSized) {\r\n      if (this.rotate) {\r\n        // Current page is displayed in the middle of the visible ones\r\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\r\n        endPage = startPage + this.maxSize - 1;\r\n\r\n        // Adjust if limit is exceeded\r\n        if (endPage > totalPages) {\r\n          endPage = totalPages;\r\n          startPage = endPage - this.maxSize + 1;\r\n        }\r\n      } else {\r\n        // Visible pages are paginated with maxSize\r\n        startPage =\r\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\r\n\r\n        // Adjust last page if limit is exceeded\r\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\r\n      }\r\n    }\r\n\r\n    // Add page number links\r\n    for (let num = startPage; num <= endPage; num++) {\r\n      const page = this.makePage(num, num.toString(), num === currentPage);\r\n      pages.push(page);\r\n    }\r\n\r\n    // Add links to move between page sets\r\n    if (isMaxSized && !this.rotate) {\r\n      if (startPage > 1) {\r\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\r\n        pages.unshift(previousPageSet);\r\n      }\r\n\r\n      if (endPage < totalPages) {\r\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\r\n        pages.push(nextPageSet);\r\n      }\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  // base class\r\n  protected calculateTotalPages(): number {\r\n    const totalPages =\r\n      this.itemsPerPage < 1\r\n        ? 1\r\n        : Math.ceil(this.totalItems / this.itemsPerPage);\r\n\r\n    return Math.max(totalPages || 0, 1);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'pager',\r\n  template: \"<ul class=\\\"pager\\\"> <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\" [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\" class=\\\"{{ pageBtnClass }}\\\"> <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a> </li> <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\" [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\" class=\\\"{{ pageBtnClass }}\\\"> <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a> </li> </ul> \",\r\n  providers: [PAGER_CONTROL_VALUE_ACCESSOR]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: PaginationConfig, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'align': [{ type: Input },],\n'maxSize': [{ type: Input },],\n'boundaryLinks': [{ type: Input },],\n'directionLinks': [{ type: Input },],\n'firstText': [{ type: Input },],\n'previousText': [{ type: Input },],\n'nextText': [{ type: Input },],\n'lastText': [{ type: Input },],\n'rotate': [{ type: Input },],\n'pageBtnClass': [{ type: Input },],\n'disabled': [{ type: Input },],\n'numPages': [{ type: Output },],\n'pageChanged': [{ type: Output },],\n'itemsPerPage': [{ type: Input },],\n'totalItems': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}