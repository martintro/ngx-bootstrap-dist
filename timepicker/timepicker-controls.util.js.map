{"version":3,"sources":["../../.tmp/timepicker/timepicker-controls.util.ts"],"names":[],"mappings":"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","file":"timepicker-controls.util.js","sourceRoot":"","sourcesContent":["import { changeTime } from './timepicker.utils';\r\nimport {\r\n  TimeChangeEvent,\r\n  TimepickerComponentState,\r\n  TimepickerControls\r\n} from './timepicker.models';\r\n\r\nexport function canChangeValue(\r\n  state: TimepickerComponentState,\r\n  event?: TimeChangeEvent\r\n): boolean {\r\n  if (state.readonlyInput || state.disabled) {\r\n    return false;\r\n  }\r\n\r\n  if (event) {\r\n    if (event.source === 'wheel' && !state.mousewheel) {\r\n      return false;\r\n    }\r\n\r\n    if (event.source === 'key' && !state.arrowkeys) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function canChangeHours(\r\n  event: TimeChangeEvent,\r\n  controls: TimepickerControls\r\n): boolean {\r\n  if (!event.step) {\r\n    return false;\r\n  }\r\n\r\n  if (event.step > 0 && !controls.canIncrementHours) {\r\n    return false;\r\n  }\r\n\r\n  if (event.step < 0 && !controls.canDecrementHours) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function canChangeMinutes(\r\n  event: TimeChangeEvent,\r\n  controls: TimepickerControls\r\n): boolean {\r\n  if (!event.step) {\r\n    return false;\r\n  }\r\n  if (event.step > 0 && !controls.canIncrementMinutes) {\r\n    return false;\r\n  }\r\n  if (event.step < 0 && !controls.canDecrementMinutes) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function canChangeSeconds(\r\n  event: TimeChangeEvent,\r\n  controls: TimepickerControls\r\n): boolean {\r\n  if (!event.step) {\r\n    return false;\r\n  }\r\n  if (event.step > 0 && !controls.canIncrementSeconds) {\r\n    return false;\r\n  }\r\n  if (event.step < 0 && !controls.canDecrementSeconds) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function getControlsValue(\r\n  state: TimepickerComponentState\r\n): TimepickerComponentState {\r\n  const {\r\n    hourStep,\r\n    minuteStep,\r\n    secondsStep,\r\n    readonlyInput,\r\n    disabled,\r\n    mousewheel,\r\n    arrowkeys,\r\n    showSpinners,\r\n    showMeridian,\r\n    showSeconds,\r\n    meridians,\r\n    min,\r\n    max\r\n  } = state;\r\n\r\n  return {\r\n    hourStep,\r\n    minuteStep,\r\n    secondsStep,\r\n    readonlyInput,\r\n    disabled,\r\n    mousewheel,\r\n    arrowkeys,\r\n    showSpinners,\r\n    showMeridian,\r\n    showSeconds,\r\n    meridians,\r\n    min,\r\n    max\r\n  };\r\n}\r\n\r\nexport function timepickerControls(\r\n  value: Date,\r\n  state: TimepickerComponentState\r\n): TimepickerControls {\r\n  const hoursPerDayHalf = 12;\r\n  const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\r\n  const res: TimepickerControls = {\r\n    canIncrementHours: true,\r\n    canIncrementMinutes: true,\r\n    canIncrementSeconds: true,\r\n\r\n    canDecrementHours: true,\r\n    canDecrementMinutes: true,\r\n    canDecrementSeconds: true,\r\n\r\n    canToggleMeridian: true\r\n  };\r\n\r\n  if (!value) {\r\n    return res;\r\n  }\r\n\r\n  // compare dates\r\n  if (max) {\r\n    const _newHour = changeTime(value, { hour: hourStep });\r\n    res.canIncrementHours = max > _newHour;\r\n\r\n    if (!res.canIncrementHours) {\r\n      const _newMinutes = changeTime(value, { minute: minuteStep });\r\n      res.canIncrementMinutes = showSeconds\r\n        ? max > _newMinutes\r\n        : max >= _newMinutes;\r\n    }\r\n\r\n    if (!res.canIncrementMinutes) {\r\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\r\n      res.canIncrementSeconds = max >= _newSeconds;\r\n    }\r\n\r\n    if (value.getHours() < hoursPerDayHalf) {\r\n      res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\r\n    }\r\n  }\r\n\r\n  if (min) {\r\n    const _newHour = changeTime(value, { hour: -hourStep });\r\n    res.canDecrementHours = min < _newHour;\r\n\r\n    if (!res.canDecrementHours) {\r\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\r\n      res.canDecrementMinutes = showSeconds\r\n        ? min < _newMinutes\r\n        : min <= _newMinutes;\r\n    }\r\n\r\n    if (!res.canDecrementMinutes) {\r\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\r\n      res.canDecrementSeconds = min <= _newSeconds;\r\n    }\r\n\r\n    if (value.getHours() >= hoursPerDayHalf) {\r\n      res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n"]}