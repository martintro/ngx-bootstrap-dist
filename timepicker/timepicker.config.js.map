{"version":3,"sources":["../../.tmp/timepicker/timepicker.config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C,2DAA2D;AAE3D;IAAA;QACE,wBAAwB;QACxB,aAAQ,GAAG,CAAC,CAAC;QACb,wBAAwB;QACxB,eAAU,GAAG,CAAC,CAAC;QACf,2BAA2B;QAC3B,gBAAW,GAAG,EAAE,CAAC;QACjB,+FAA+F;QAC/F,iBAAY,GAAG,IAAI,CAAC;QACpB,sCAAsC;QACtC,cAAS,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACzB,wDAAwD;QACxD,kBAAa,GAAG,KAAK,CAAC;QACtB,wDAAwD;QACxD,aAAQ,GAAG,KAAK,CAAC;QACjB,sEAAsE;QACtE,eAAU,GAAG,IAAI,CAAC;QAClB,iFAAiF;QACjF,cAAS,GAAG,IAAI,CAAC;QACjB,sEAAsE;QACtE,iBAAY,GAAG,IAAI,CAAC;QACpB,iCAAiC;QACjC,gBAAW,GAAG,KAAK,CAAC;QACpB,iCAAiC;QACjC,gBAAW,GAAG,IAAI,CAAC;IAWrB,CAAC;IANM,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,uBAAC;CAnCD,AAmCC,IAAA;SAnCY,gBAAgB","file":"timepicker.config.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n/** Provides default configuration values for timepicker */\r\n\r\nexport class TimepickerConfig {\r\n  /** hours change step */\r\n  hourStep = 1;\r\n  /** hours change step */\r\n  minuteStep = 5;\r\n  /** seconds changes step */\r\n  secondsStep = 10;\r\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\r\n  showMeridian = true;\r\n  /** meridian labels based on locale */\r\n  meridians = ['AM', 'PM'];\r\n  /** if true hours and minutes fields will be readonly */\r\n  readonlyInput = false;\r\n  /** if true hours and minutes fields will be disabled */\r\n  disabled = false;\r\n  /** if true scroll inside hours and minutes inputs will change time */\r\n  mousewheel = true;\r\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\r\n  arrowkeys = true;\r\n  /** if true spinner arrows above and below the inputs will be shown */\r\n  showSpinners = true;\r\n  /** show seconds in timepicker */\r\n  showSeconds = false;\r\n  /** show minutes in timepicker */\r\n  showMinutes = true;\r\n  /** minimum time user can select */\r\n  min: Date;\r\n  /** maximum time user can select */\r\n  max: Date;\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}