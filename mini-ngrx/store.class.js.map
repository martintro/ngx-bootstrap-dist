{"version":3,"sources":["../../.tmp/mini-ngrx/store.class.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;GAEG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAG7C,OAAO,EAAE,oBAAoB,EAAE,MAAM,oCAAoC,CAAC;AAE1E,OAAO,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAC;AAGxC;IAAkC,6BAAa;IAC7C,mBACU,WAA6B,EAC7B,QAA4B,EACpC,MAAuB;QAHzB,YAKE,iBAAO,SAGR;QAPS,iBAAW,GAAX,WAAW,CAAkB;QAC7B,cAAQ,GAAR,QAAQ,CAAoB;QAKpC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;IACvB,CAAC;IAED,0BAAM,GAAN,UAAU,WAA4B;QACpC,IAAM,OAAO,GAAkB,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAE3D,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,wBAAI,GAAJ,UAAQ,QAAwB;QAC9B,IAAM,KAAK,GAAG,IAAI,SAAS,CAAI,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACtE,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE1B,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,4BAAQ,GAAR,UAAS,MAAc;QACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,wBAAI,GAAJ,UAAK,MAAc;QACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,yBAAK,GAAL,UAAM,GAAQ;QACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED,4BAAQ,GAAR;QACE,QAAQ;IACV,CAAC;IACH,gBAAC;AAAD,CAvCA,AAuCC,CAvCiC,UAAU,GAuC3C","file":"store.class.js","sourceRoot":"","sourcesContent":["/**\r\n * @copyright ngrx\r\n */\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { Operator } from 'rxjs/Operator';\r\nimport { distinctUntilChanged } from 'rxjs/operator/distinctUntilChanged';\r\n\r\nimport { map } from 'rxjs/operator/map';\r\nimport { Action, ActionReducer } from './index';\r\n\r\nexport class MiniStore<T> extends Observable<T> implements Observer<Action> {\r\n  constructor(\r\n    private _dispatcher: Observer<Action>,\r\n    private _reducer: ActionReducer<any>,\r\n    state$: Observable<any>\r\n  ) {\r\n    super();\r\n\r\n    this.source = state$;\r\n  }\r\n\r\n  select<R>(pathOrMapFn: (state: T) => R): Observable<R> {\r\n    const mapped$: Observable<R> = map.call(this, pathOrMapFn);\r\n\r\n    return distinctUntilChanged.call(mapped$);\r\n  }\r\n\r\n  lift<R>(operator: Operator<T, R>): MiniStore<R> {\r\n    const store = new MiniStore<R>(this._dispatcher, this._reducer, this);\r\n    store.operator = operator;\r\n\r\n    return store;\r\n  }\r\n\r\n  dispatch(action: Action) {\r\n    this._dispatcher.next(action);\r\n  }\r\n\r\n  next(action: Action) {\r\n    this._dispatcher.next(action);\r\n  }\r\n\r\n  error(err: any) {\r\n    this._dispatcher.error(err);\r\n  }\r\n\r\n  complete() {\r\n    /*noop*/\r\n  }\r\n}\r\n"]}