{"version":3,"sources":["../../.tmp/tabs/tab.directive.ts"],"names":[],"mappings":"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","file":"tab.directive.js","sourceRoot":"","sourcesContent":["import {\r\n  Directive,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n  OnInit,\r\n  OnDestroy,\r\n  ElementRef,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { TabsetComponent } from './tabset.component';\r\n\r\n\r\nexport class TabDirective implements OnInit, OnDestroy {\r\n  /** tab header text */\r\n   heading: string;\r\n  /** tab id. The same id with suffix '-link' will be added to the corresponding &lt;li&gt; element  */\r\n  \r\n   id: string;\r\n  /** if true tab can not be activated */\r\n   disabled: boolean;\r\n  /** if true tab can be removable, additional button will appear */\r\n   removable: boolean;\r\n  /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\r\n  \r\n  get customClass(): string {\r\n    return this._customClass;\r\n  }\r\n\r\n  set customClass(customClass: string) {\r\n    if (this.customClass) {\r\n      this.customClass.split(' ').forEach((cssClass: string) => {\r\n        this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\r\n      });\r\n    }\r\n\r\n    this._customClass = customClass ? customClass.trim() : null;\r\n\r\n    if (this.customClass) {\r\n      this.customClass.split(' ').forEach((cssClass: string) => {\r\n        this.renderer.addClass(this.elementRef.nativeElement, cssClass);\r\n      });\r\n    }\r\n  }\r\n\r\n  /** tab active state toggle */\r\n  \r\n  \r\n  get active(): boolean {\r\n    return this._active;\r\n  }\r\n\r\n  set active(active: boolean) {\r\n    if (this._active === active) {\r\n      return;\r\n    }\r\n    if ((this.disabled && active) || !active) {\r\n      if (this._active && !active) {\r\n        this.deselect.emit(this);\r\n        this._active = active;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this._active = active;\r\n    this.select.emit(this);\r\n    this.tabset.tabs.forEach((tab: TabDirective) => {\r\n      if (tab !== this) {\r\n        tab.active = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\r\n   select: EventEmitter<TabDirective> = new EventEmitter();\r\n  /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\r\n   deselect: EventEmitter<TabDirective> = new EventEmitter();\r\n  /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\r\n   removed: EventEmitter<TabDirective> = new EventEmitter();\r\n\r\n   addClass = true;\r\n\r\n  headingRef: TemplateRef<any>;\r\n  tabset: TabsetComponent;\r\n  protected _active: boolean;\r\n  protected _customClass: string;\r\n\r\n  constructor(\r\n    tabset: TabsetComponent,\r\n    public elementRef: ElementRef,\r\n    public renderer: Renderer2\r\n  ) {\r\n    this.tabset = tabset;\r\n    this.tabset.addTab(this);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.removable = this.removable;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tabset.removeTab(this, { reselect: false, emit: false });\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: 'tab, [tab]' }, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TabsetComponent, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'heading': [{ type: Input },],\n'id': [{ type: HostBinding, args: ['attr.id', ] },{ type: Input },],\n'disabled': [{ type: Input },],\n'removable': [{ type: Input },],\n'customClass': [{ type: Input },],\n'active': [{ type: HostBinding, args: ['class.active', ] },{ type: Input },],\n'select': [{ type: Output },],\n'deselect': [{ type: Output },],\n'removed': [{ type: Output },],\n'addClass': [{ type: HostBinding, args: ['class.tab-pane', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}