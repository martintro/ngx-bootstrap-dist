{"version":3,"sources":["../../../.tmp/chronos/units/day-of-month.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAClE,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAC/C,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AACnC,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAE7C,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AACzC,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAC;AAG/C,aAAa;AAEb,cAAc,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,EACxC,UAAU,IAAU,EAAE,IAA0B;IAC9C,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC;AAEL,UAAU;AAEV,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAE1B,YAAY;AACZ,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAE3B,UAAU;AAEV,aAAa,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AAC9B,aAAa,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;AACvC,aAAa,CAAC,IAAI,EAAE,UAAU,QAAQ,EAAE,MAAM;IAC5C,MAAM,CAAC,MAAM,CAAC,uBAAuB,IAAI,MAAM,CAAC,aAAa,CAAC;AAChE,CAAC,CAAC,CAAC;AAEH,aAAa,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AACjC,aAAa,CAAC,IAAI,EAChB,UAAU,KAAa,EAAE,KAAgB,EAAE,MAAyB;IAClE,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE/C,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC,CAAC,CAAC","file":"day-of-month.js","sourceRoot":"","sourcesContent":["import { addFormatToken } from '../format/format';\r\nimport { getDate } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { DATE } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { DateArray, DateFormatterOptions } from '../types';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { DateParsingConfig } from '../create/parsing.types';\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('D', ['DD', 2, false], 'Do',\r\n  function (date: Date, opts: DateFormatterOptions): string {\r\n    return getDate(date, opts.isUTC).toString(10);\r\n  });\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('date', 'D');\r\n\r\n// PRIOROITY\r\naddUnitPriority('date', 9);\r\n\r\n// PARSING\r\n\r\naddRegexToken('D', match1to2);\r\naddRegexToken('DD', match1to2, match2);\r\naddRegexToken('Do', function (isStrict, locale) {\r\n  return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\r\n});\r\n\r\naddParseToken(['D', 'DD'], DATE);\r\naddParseToken('Do',\r\n  function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\r\n    array[DATE] = toInt(input.match(match1to2)[0]);\r\n\r\n    return config;\r\n  });\r\n"]}