{"version":3,"sources":["../../../.tmp/chronos/parse/regex.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAG9D,MAAM,CAAC,IAAM,MAAM,GAAG,IAAI,CAAC,CAAY,cAAc;AACrD,MAAM,CAAC,IAAM,MAAM,GAAG,MAAM,CAAC,CAAU,eAAe;AACtD,MAAM,CAAC,IAAM,MAAM,GAAG,OAAO,CAAC,CAAS,gBAAgB;AACvD,MAAM,CAAC,IAAM,MAAM,GAAG,OAAO,CAAC,CAAS,iBAAiB;AACxD,MAAM,CAAC,IAAM,MAAM,GAAG,YAAY,CAAC,CAAI,mBAAmB;AAC1D,MAAM,CAAC,IAAM,SAAS,GAAG,OAAO,CAAC,CAAS,eAAe;AACzD,MAAM,CAAC,IAAM,SAAS,GAAG,WAAW,CAAC,CAAK,iBAAiB;AAC3D,MAAM,CAAC,IAAM,SAAS,GAAG,eAAe,CAAC,CAAC,mBAAmB;AAC7D,MAAM,CAAC,IAAM,SAAS,GAAG,SAAS,CAAC,CAAO,gBAAgB;AAC1D,MAAM,CAAC,IAAM,SAAS,GAAG,SAAS,CAAC,CAAO,iBAAiB;AAC3D,MAAM,CAAC,IAAM,SAAS,GAAG,cAAc,CAAC,CAAE,mBAAmB;AAE7D,MAAM,CAAC,IAAM,aAAa,GAAG,KAAK,CAAC,CAAW,gBAAgB;AAC9D,MAAM,CAAC,IAAM,WAAW,GAAG,UAAU,CAAC,CAAM,gBAAgB;AAE5D,MAAM,CAAC,IAAM,WAAW,GAAG,oBAAoB,CAAC,CAAC,iCAAiC;AAClF,MAAM,CAAC,IAAM,gBAAgB,GAAG,yBAAyB,CAAC,CAAC,yCAAyC;AAEpG,MAAM,CAAC,IAAM,cAAc,GAAG,sBAAsB,CAAC,CAAC,0BAA0B;AAEhF,oFAAoF;AACpF,0DAA0D;AAC1D,2BAA2B;AAC3B,MAAM,CAAC,IAAM,SAAS,GAAG,0IAA0I,CAAC;AAGpK,IAAM,OAAO,GAAmC,EAAE,CAAC;AAGnD,MAAM,wBAAwB,KAAa,EAAE,KAA6B,EAAE,WAAoB;IAC9F,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;QAEvB,MAAM,CAAC;IACT,CAAC;IAED,OAAO,CAAC,KAAK,CAAC,GAAG,UAAU,QAAiB,EAAE,MAAc;QAC1D,MAAM,CAAC,CAAC,QAAQ,IAAI,WAAW,CAAC,GAAG,WAAW,GAAG,KAAK,CAAC;IACzD,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,gCAAgC,KAAa,EAAE,MAAc;IACjE,IAAM,OAAO,GAAG,KAAK,CAAC;IACtB,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AACzC,CAAC;AAED,uGAAuG;AACvG,wBAAwB,GAAW;IACjC,2BAA2B;IAC3B,MAAM,CAAC,WAAW,CAAC,GAAG;SACnB,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;SACjB,OAAO,CAAC,qCAAqC,EAAE,UAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAK,OAAA,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAApB,CAAoB,CAAC,CACnG,CAAC;AACJ,CAAC;AAED,MAAM,sBAAsB,GAAW;IACrC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;AACvD,CAAC","file":"regex.js","sourceRoot":"","sourcesContent":["import { hasOwnProp, isFunction } from '../utils/type-checks';\r\nimport { Locale } from '../locale/locale.class';\r\n\r\nexport const match1 = /\\d/;            //       0 - 9\r\nexport const match2 = /\\d\\d/;          //      00 - 99\r\nexport const match3 = /\\d{3}/;         //     000 - 999\r\nexport const match4 = /\\d{4}/;         //    0000 - 9999\r\nexport const match6 = /[+-]?\\d{6}/;    // -999999 - 999999\r\nexport const match1to2 = /\\d\\d?/;         //       0 - 99\r\nexport const match3to4 = /\\d\\d\\d\\d?/;     //     999 - 9999\r\nexport const match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\r\nexport const match1to3 = /\\d{1,3}/;       //       0 - 999\r\nexport const match1to4 = /\\d{1,4}/;       //       0 - 9999\r\nexport const match1to6 = /[+-]?\\d{1,6}/;  // -999999 - 999999\r\n\r\nexport const matchUnsigned = /\\d+/;           //       0 - inf\r\nexport const matchSigned = /[+-]?\\d+/;      //    -inf - inf\r\n\r\nexport const matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\r\nexport const matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\r\n\r\nexport const matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\r\n\r\n// any word (or two) characters or numbers including two/three word month in arabic.\r\n// includes scottish gaelic two word and hyphenated months\r\n// tslint:disable-next-line\r\nexport const matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\r\n\r\nexport type RegExpTokenFn = (isStrict: boolean, locale: Locale) => RegExp;\r\nconst regexes: {[key: string]: RegExpTokenFn} = {};\r\n\r\n\r\nexport function addRegexToken(token: string, regex: RegExp | RegExpTokenFn, strictRegex?: RegExp): void {\r\n  if (isFunction(regex)) {\r\n    regexes[token] = regex;\r\n\r\n    return;\r\n  }\r\n\r\n  regexes[token] = function (isStrict: boolean, locale: Locale) {\r\n    return (isStrict && strictRegex) ? strictRegex : regex;\r\n  };\r\n}\r\n\r\nexport function getParseRegexForToken(token: string, locale: Locale): RegExp {\r\n  const _strict = false;\r\n  if (!hasOwnProp(regexes, token)) {\r\n    return new RegExp(unescapeFormat(token));\r\n  }\r\n\r\n  return regexes[token](_strict, locale);\r\n}\r\n\r\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\r\nfunction unescapeFormat(str: string): string {\r\n  // tslint:disable-next-line\r\n  return regexEscape(str\r\n    .replace('\\\\', '')\r\n    .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4)\r\n  );\r\n}\r\n\r\nexport function regexEscape(str: string): string {\r\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n}\r\n"]}