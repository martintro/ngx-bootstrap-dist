{"version":3,"sources":["../../../.tmp/chronos/create/local.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAGnD,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAE9C,MAAM,oBAAoB,KAAgB,EAAE,MAA0B,EAC5C,SAAkB,EAAE,MAAgB,EAAE,KAAe;IAC7E,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,IAAM,MAAM,GAAG,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IAEzE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;AACnB,CAAC","file":"local.js","sourceRoot":"","sourcesContent":["import { createLocalOrUTC } from './from-anything';\r\nimport { DateArray, DateObject } from '../types';\r\nimport { DateInput } from '../test/chain';\r\nimport { isDate } from '../utils/type-checks';\r\n\r\nexport function parseDate(input: DateInput, format?: string | string[],\r\n                          localeKey?: string, strict?: boolean, isUTC?: boolean): Date {\r\n  if (isDate(input)) {\r\n    return input;\r\n  }\r\n\r\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\r\n\r\n  return config._d;\r\n}\r\n"]}