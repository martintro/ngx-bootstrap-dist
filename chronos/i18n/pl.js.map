{"version":3,"sources":["../../../.tmp/chronos/i18n/pl.ts"],"names":[],"mappings":"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","file":"pl.js","sourceRoot":"","sourcesContent":["// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from '../locale/locale.class';\r\nimport { getMonth } from '../utils/date-getters';\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n\r\n//! moment.js locale configuration\r\n//! locale : Polish [pl]\r\n//! author : Rafal Hirsz : https://github.com/evoL\r\n\r\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\r\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\r\n\r\nfunction plural(num: number): boolean {\r\n  return (num % 10 < 5) && (num % 10 > 1) && ((~~(num / 10) % 10) !== 1);\r\n}\r\n\r\nfunction translate(num: number, withoutSuffix: boolean, key: string): string {\r\n  let result = num + ' ';\r\n  switch (key) {\r\n    case 'ss':\r\n      return result + (plural(num) ? 'sekundy' : 'sekund');\r\n    case 'm':\r\n      return withoutSuffix ? 'minuta' : 'minutę';\r\n    case 'mm':\r\n      return result + (plural(num) ? 'minuty' : 'minut');\r\n    case 'h':\r\n      return withoutSuffix ? 'godzina' : 'godzinę';\r\n    case 'hh':\r\n      return result + (plural(num) ? 'godziny' : 'godzin');\r\n    case 'MM':\r\n      return result + (plural(num) ? 'miesiące' : 'miesięcy');\r\n    case 'yy':\r\n      return result + (plural(num) ? 'lata' : 'lat');\r\n  }\r\n}\r\n\r\nexport const plLocale: LocaleData = {\r\n  abbr: 'pl',\r\n  months(date: Date, format: string, isUTC?: boolean): string | string[] {\r\n    if (!date) {\r\n      return monthsNominative;\r\n    } else if (format === '') {\r\n      // Hack: if format empty we know this is used to generate\r\n      // RegExp by moment. Give then back both valid forms of months\r\n      // in RegExp ready format.\r\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\r\n    } else if (/D MMMM/.test(format)) {\r\n      return monthsSubjective[getMonth(date, isUTC)];\r\n    } else {\r\n      return monthsNominative[getMonth(date, isUTC)];\r\n    }\r\n  },\r\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\r\n  weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\r\n  weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\r\n  weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\r\n  longDateFormat: {\r\n    LT: 'HH:mm',\r\n    LTS: 'HH:mm:ss',\r\n    L: 'DD.MM.YYYY',\r\n    LL: 'D MMMM YYYY',\r\n    LLL: 'D MMMM YYYY HH:mm',\r\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\r\n  },\r\n  calendar: {\r\n    sameDay: '[Dziś o] LT',\r\n    nextDay: '[Jutro o] LT',\r\n    nextWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[W niedzielę o] LT';\r\n\r\n        case 2:\r\n          return '[We wtorek o] LT';\r\n\r\n        case 3:\r\n          return '[W środę o] LT';\r\n\r\n        case 6:\r\n          return '[W sobotę o] LT';\r\n\r\n        default:\r\n          return '[W] dddd [o] LT';\r\n      }\r\n    },\r\n    lastDay: '[Wczoraj o] LT',\r\n    lastWeek(date: Date): string {\r\n      switch (getDayOfWeek(date)) {\r\n        case 0:\r\n          return '[W zeszłą niedzielę o] LT';\r\n        case 3:\r\n          return '[W zeszłą środę o] LT';\r\n        case 6:\r\n          return '[W zeszłą sobotę o] LT';\r\n        default:\r\n          return '[W zeszły] dddd [o] LT';\r\n      }\r\n    },\r\n    sameElse: 'L'\r\n  },\r\n  relativeTime: {\r\n    future: 'za %s',\r\n    past: '%s temu',\r\n    s: 'kilka sekund',\r\n    ss: translate,\r\n    m: translate,\r\n    mm: translate,\r\n    h: translate,\r\n    hh: translate,\r\n    d: '1 dzień',\r\n    dd: '%d dni',\r\n    M: 'miesiąc',\r\n    MM: translate,\r\n    y: 'rok',\r\n    yy: translate\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n  ordinal: '%d.',\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n"]}