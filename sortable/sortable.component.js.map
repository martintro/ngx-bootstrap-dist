{"version":3,"sources":["../../.tmp/sortable/sortable.component.ts"],"names":[],"mappings":"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","file":"sortable.component.js","sourceRoot":"","sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  forwardRef,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { DraggableItem } from './draggable-item';\r\nimport { DraggableItemService } from './draggable-item.service';\r\n\r\n/* tslint:disable */\r\n\r\n/* tslint:enable */\r\nexport class SortableComponent implements ControlValueAccessor {\r\n  private static globalZoneIndex = 0;\r\n\r\n  /** field name if input array consists of objects */\r\n   fieldName: string;\r\n\r\n  /** class name for items wrapper */\r\n   wrapperClass = '';\r\n\r\n  /** style object for items wrapper */\r\n   wrapperStyle: { [key: string]: string } = {};\r\n\r\n  /** class name for item */\r\n   itemClass = '';\r\n\r\n  /** style object for item */\r\n   itemStyle: { [key: string]: string } = {};\r\n\r\n  /** class name for active item */\r\n   itemActiveClass = '';\r\n\r\n  /** style object for active item */\r\n   itemActiveStyle: { [key: string]: string } = {};\r\n\r\n  /** class name for placeholder */\r\n   placeholderClass = '';\r\n\r\n  /** style object for placeholder */\r\n   placeholderStyle: { [key: string]: string } = {};\r\n\r\n  /** placeholder item which will be shown if collection is empty */\r\n   placeholderItem = '';\r\n\r\n  /** used to specify a custom item template. Template variables: item and index; */\r\n   itemTemplate: TemplateRef<any>;\r\n\r\n  /** fired on array change (reordering, insert, remove), same as <code>ngModelChange</code>.\r\n   *  Returns new items collection as a payload.\r\n   */\r\n   onChange: EventEmitter<any[]> = new EventEmitter<any[]>();\r\n\r\n  showPlaceholder = false;\r\n  activeItem = -1;\r\n\r\n  get items(): SortableItem[] {\r\n    return this._items;\r\n  }\r\n\r\n  set items(value: SortableItem[]) {\r\n    this._items = value;\r\n    const out = this.items.map((x: SortableItem) => x.initData);\r\n    this.onChanged(out);\r\n    this.onChange.emit(out);\r\n  }\r\n\r\n  onTouched: any = Function.prototype;\r\n  onChanged: any = Function.prototype;\r\n\r\n  private transfer: DraggableItemService;\r\n  private currentZoneIndex: number;\r\n  private _items: SortableItem[];\r\n\r\n  constructor(transfer: DraggableItemService) {\r\n    this.transfer = transfer;\r\n    this.currentZoneIndex = SortableComponent.globalZoneIndex++;\r\n    this.transfer\r\n      .onCaptureItem()\r\n      .subscribe((item: DraggableItem) => this.onDrop(item));\r\n  }\r\n\r\n  onItemDragstart(\r\n    event: DragEvent,\r\n    item: SortableItem,\r\n    i: number\r\n  ): void {\r\n    this.initDragstartEvent(event);\r\n    this.onTouched();\r\n    this.transfer.dragStart({\r\n      event,\r\n      item,\r\n      i,\r\n      initialIndex: i,\r\n      lastZoneIndex: this.currentZoneIndex,\r\n      overZoneIndex: this.currentZoneIndex\r\n    });\r\n  }\r\n\r\n  onItemDragover(event: DragEvent, i: number): void {\r\n    if (!this.transfer.getItem()) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    const dragItem = this.transfer.captureItem(\r\n      this.currentZoneIndex,\r\n      this.items.length\r\n    );\r\n    let newArray: any[] = [];\r\n    if (!this.items.length) {\r\n      newArray = [dragItem.item];\r\n    } else if (dragItem.i > i) {\r\n      newArray = [\r\n        ...this.items.slice(0, i),\r\n        dragItem.item,\r\n        ...this.items.slice(i, dragItem.i),\r\n        ...this.items.slice(dragItem.i + 1)\r\n      ];\r\n    } else {\r\n      // this.draggedItem.i < i\r\n      newArray = [\r\n        ...this.items.slice(0, dragItem.i),\r\n        ...this.items.slice(dragItem.i + 1, i + 1),\r\n        dragItem.item,\r\n        ...this.items.slice(i + 1)\r\n      ];\r\n    }\r\n    this.items = newArray;\r\n    dragItem.i = i;\r\n    this.activeItem = i;\r\n    this.updatePlaceholderState();\r\n  }\r\n\r\n  cancelEvent(event: DragEvent): void {\r\n    if (!this.transfer.getItem() || !event) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  onDrop(item: DraggableItem): void {\r\n    if (\r\n      item &&\r\n      item.overZoneIndex !== this.currentZoneIndex &&\r\n      item.lastZoneIndex === this.currentZoneIndex\r\n    ) {\r\n      this.items = this.items.filter(\r\n        (x: SortableItem, i: number) => i !== item.i\r\n      );\r\n      this.updatePlaceholderState();\r\n    }\r\n    this.resetActiveItem(undefined);\r\n  }\r\n\r\n  resetActiveItem(event: DragEvent): void {\r\n    this.cancelEvent(event);\r\n    this.activeItem = -1;\r\n  }\r\n\r\n  registerOnChange(callback: (_: any) => void): void {\r\n    this.onChanged = callback;\r\n  }\r\n\r\n  registerOnTouched(callback: () => void): void {\r\n    this.onTouched = callback;\r\n  }\r\n\r\n  writeValue(value: any[]): void {\r\n    if (value) {\r\n      this.items = value.map((x: any, i: number) => ({\r\n        id: i,\r\n        initData: x,\r\n        value: this.fieldName ? x[this.fieldName] : x\r\n      }));\r\n    } else {\r\n      this.items = [];\r\n    }\r\n    this.updatePlaceholderState();\r\n  }\r\n\r\n  updatePlaceholderState(): void {\r\n    this.showPlaceholder = !this._items.length;\r\n  }\r\n\r\n  getItemStyle(isActive: boolean): {} {\r\n    return isActive\r\n      ? Object.assign({}, this.itemStyle, this.itemActiveStyle)\r\n      : this.itemStyle;\r\n  }\r\n\r\n  // tslint:disable-next-line\r\n  private initDragstartEvent(event: DragEvent): void {\r\n    // it is necessary for mozilla\r\n    // data type should be 'Text' instead of 'text/plain' to keep compatibility\r\n    // with IE\r\n    event.dataTransfer.setData('Text', 'placeholder');\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'bs-sortable',\r\n  exportAs: 'bs-sortable',\r\n  template: `\r\n<div\r\n    [ngClass]=\"wrapperClass\"\r\n    [ngStyle]=\"wrapperStyle\"\r\n    [ngStyle]=\"wrapperStyle\"\r\n    (dragover)=\"cancelEvent($event)\"\r\n    (dragenter)=\"cancelEvent($event)\"\r\n    (drop)=\"resetActiveItem($event)\"\r\n    (mouseleave)=\"resetActiveItem($event)\">\r\n  <div\r\n        *ngIf=\"showPlaceholder\"\r\n        [ngClass]=\"placeholderClass\"\r\n        [ngStyle]=\"placeholderStyle\"\r\n        (dragover)=\"onItemDragover($event, 0)\"\r\n        (dragenter)=\"cancelEvent($event)\"\r\n    >{{placeholderItem}}</div>\r\n    <div\r\n        *ngFor=\"let item of items; let i=index;\"\r\n        [ngClass]=\"[ itemClass, i === activeItem ? itemActiveClass : '' ]\"\r\n        [ngStyle]=\"getItemStyle(i === activeItem)\"\r\n        draggable=\"true\"\r\n        (dragstart)=\"onItemDragstart($event, item, i)\"\r\n        (dragend)=\"resetActiveItem($event)\"\r\n        (dragover)=\"onItemDragover($event, i)\"\r\n        (dragenter)=\"cancelEvent($event)\"\r\n    ><ng-template [ngTemplateOutlet]=\"itemTemplate || defItemTemplate\"\r\n  [ngTemplateOutletContext]=\"{item:item, index: i}\"></ng-template></div>\r\n</div>\r\n\r\n<ng-template #defItemTemplate let-item=\"item\">{{item.value}}</ng-template>  \r\n`,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => SortableComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DraggableItemService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'fieldName': [{ type: Input },],\n'wrapperClass': [{ type: Input },],\n'wrapperStyle': [{ type: Input },],\n'itemClass': [{ type: Input },],\n'itemStyle': [{ type: Input },],\n'itemActiveClass': [{ type: Input },],\n'itemActiveStyle': [{ type: Input },],\n'placeholderClass': [{ type: Input },],\n'placeholderStyle': [{ type: Input },],\n'placeholderItem': [{ type: Input },],\n'itemTemplate': [{ type: Input },],\n'onChange': [{ type: Output },],\n};\n}\r\n\r\nexport declare interface SortableItem {\r\n  id: number;\r\n  value: string;\r\n  initData: any;\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}