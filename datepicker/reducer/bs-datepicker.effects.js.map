{"version":3,"sources":["../../../.tmp/datepicker/reducer/bs-datepicker.effects.ts"],"names":[],"mappings":"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","file":"bs-datepicker.effects.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/filter';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { getFullYear, getMonth } from '../../chronos/utils/date-getters';\r\nimport { BsDatepickerAbstractComponent } from '../base/bs-datepicker-container';\r\nimport { BsDatepickerConfig } from '../bs-datepicker.config';\r\nimport {\r\n  BsDatepickerViewMode,\r\n  BsNavigationEvent,\r\n  CalendarCellViewModel,\r\n  CellHoverEvent,\r\n  DatepickerRenderOptions,\r\n  DaysCalendarViewModel,\r\n  DayViewModel,\r\n  MonthsCalendarViewModel,\r\n  YearsCalendarViewModel\r\n} from '../models/index';\r\nimport { BsDatepickerActions } from './bs-datepicker.actions';\r\nimport { BsDatepickerStore } from './bs-datepicker.store';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { BsLocaleService } from '../bs-locale.service';\r\n\r\n\r\nexport class BsDatepickerEffects {\r\n  viewMode: Observable<BsDatepickerViewMode>;\r\n  daysCalendar: Observable<DaysCalendarViewModel[]>;\r\n  monthsCalendar: Observable<MonthsCalendarViewModel[]>;\r\n  yearsCalendar: Observable<YearsCalendarViewModel[]>;\r\n  options: Observable<DatepickerRenderOptions>;\r\n\r\n  private _store: BsDatepickerStore;\r\n  private _subs: Subscription[] = [];\r\n\r\n  constructor(private _actions: BsDatepickerActions,\r\n              private _localeService: BsLocaleService) {}\r\n\r\n  init(_bsDatepickerStore: BsDatepickerStore): BsDatepickerEffects {\r\n    this._store = _bsDatepickerStore;\r\n\r\n    return this;\r\n  }\r\n\r\n  /** setters */\r\n\r\n  setValue(value: Date): void {\r\n    this._store.dispatch(this._actions.select(value));\r\n  }\r\n\r\n  setRangeValue(value: Date[]): void {\r\n    this._store.dispatch(this._actions.selectRange(value));\r\n  }\r\n\r\n  setMinDate(value: Date): BsDatepickerEffects {\r\n    this._store.dispatch(this._actions.minDate(value));\r\n\r\n    return this;\r\n  }\r\n\r\n  setMaxDate(value: Date): BsDatepickerEffects {\r\n    this._store.dispatch(this._actions.maxDate(value));\r\n\r\n    return this;\r\n  }\r\n\r\n  setDisabled(value: boolean): BsDatepickerEffects {\r\n    this._store.dispatch(this._actions.isDisabled(value));\r\n\r\n    return this;\r\n  }\r\n\r\n  /* Set rendering options */\r\n  setOptions(_config: BsDatepickerConfig): BsDatepickerEffects {\r\n    const _options = Object.assign({locale: this._localeService.currentLocale}, _config);\r\n    this._store.dispatch(this._actions.setOptions(_options));\r\n\r\n    return this;\r\n  }\r\n\r\n  /** view to mode bindings */\r\n  setBindings(container: BsDatepickerAbstractComponent): BsDatepickerEffects {\r\n    container.daysCalendar = this._store\r\n      .select(state => state.flaggedMonths)\r\n      .filter(months => !!months);\r\n\r\n    // month calendar\r\n    container.monthsCalendar = this._store\r\n      .select(state => state.flaggedMonthsCalendar)\r\n      .filter(months => !!months);\r\n\r\n    // year calendar\r\n    container.yearsCalendar = this._store\r\n      .select(state => state.yearsCalendarFlagged)\r\n      .filter(years => !!years);\r\n\r\n    container.viewMode = this._store.select(state => state.view.mode);\r\n\r\n    container.options = this._store\r\n      .select(state => state.showWeekNumbers)\r\n      .map(showWeekNumbers => ({showWeekNumbers}));\r\n\r\n    return this;\r\n  }\r\n\r\n  /** event handlers */\r\n  setEventHandlers(container: BsDatepickerAbstractComponent): BsDatepickerEffects {\r\n    container.setViewMode = (event: BsDatepickerViewMode): void => {\r\n      this._store.dispatch(this._actions.changeViewMode(event));\r\n    };\r\n\r\n    container.navigateTo = (event: BsNavigationEvent): void => {\r\n      this._store.dispatch(this._actions.navigateStep(event.step));\r\n    };\r\n\r\n    container.dayHoverHandler = (event: CellHoverEvent): void => {\r\n      const _cell = event.cell as DayViewModel;\r\n      if (_cell.isOtherMonth || _cell.isDisabled) {\r\n        return;\r\n      }\r\n\r\n      this._store.dispatch(this._actions.hoverDay(event));\r\n      _cell.isHovered = event.isHovered;\r\n    };\r\n\r\n    container.monthHoverHandler = (event: CellHoverEvent): void => {\r\n      event.cell.isHovered = event.isHovered;\r\n    };\r\n\r\n    container.yearHoverHandler = (event: CellHoverEvent): void => {\r\n      event.cell.isHovered = event.isHovered;\r\n    };\r\n\r\n    /** select handlers */\r\n    // container.daySelectHandler = (day: DayViewModel): void => {\r\n    //   if (day.isOtherMonth || day.isDisabled) {\r\n    //     return;\r\n    //   }\r\n    //   this._store.dispatch(this._actions.select(day.date));\r\n    // };\r\n\r\n    container.monthSelectHandler = (event: CalendarCellViewModel): void => {\r\n      if (event.isDisabled) {\r\n        return;\r\n      }\r\n      this._store.dispatch(\r\n        this._actions.navigateTo({\r\n          unit: {month: getMonth(event.date)},\r\n          viewMode: 'day'\r\n        })\r\n      );\r\n    };\r\n\r\n    container.yearSelectHandler = (event: CalendarCellViewModel): void => {\r\n      if (event.isDisabled) {\r\n        return;\r\n      }\r\n      this._store.dispatch(\r\n        this._actions.navigateTo({\r\n          unit: {year: getFullYear(event.date)},\r\n          viewMode: 'month'\r\n        })\r\n      );\r\n    };\r\n\r\n    return this;\r\n  }\r\n\r\n  registerDatepickerSideEffects(): BsDatepickerEffects {\r\n    this._subs.push(\r\n      this._store.select(state => state.view).subscribe(view => {\r\n        this._store.dispatch(this._actions.calculate());\r\n      })\r\n    );\r\n\r\n    // format calendar values on month model change\r\n    this._subs.push(\r\n      this._store\r\n        .select(state => state.monthsModel)\r\n        .filter(monthModel => !!monthModel)\r\n        .subscribe(month => this._store.dispatch(this._actions.format()))\r\n    );\r\n\r\n    // flag day values\r\n    this._subs.push(\r\n      this._store\r\n        .select(state => state.formattedMonths)\r\n        .filter(month => !!month)\r\n        .subscribe(month => this._store.dispatch(this._actions.flag()))\r\n    );\r\n\r\n    // flag day values\r\n    this._subs.push(\r\n      this._store\r\n        .select(state => state.selectedDate)\r\n        .filter(selectedDate => !!selectedDate)\r\n        .subscribe(selectedDate => this._store.dispatch(this._actions.flag()))\r\n    );\r\n\r\n    // flag for date range picker\r\n    this._subs.push(\r\n      this._store\r\n        .select(state => state.selectedRange)\r\n        .filter(selectedRange => !!selectedRange)\r\n        .subscribe(selectedRange => this._store.dispatch(this._actions.flag()))\r\n    );\r\n\r\n    // monthsCalendar\r\n    this._subs.push(\r\n      this._store\r\n        .select(state => state.monthsCalendar)\r\n        .subscribe(() => this._store.dispatch(this._actions.flag()))\r\n    );\r\n\r\n    // years calendar\r\n    this._subs.push(\r\n      this._store\r\n        .select(state => state.yearsCalendarModel)\r\n        .filter(state => !!state)\r\n        .subscribe(() => this._store.dispatch(this._actions.flag()))\r\n    );\r\n\r\n    // on hover\r\n    this._subs.push(\r\n      this._store\r\n        .select(state => state.hoveredDate)\r\n        .filter(hoveredDate => !!hoveredDate)\r\n        .subscribe(hoveredDate => this._store.dispatch(this._actions.flag()))\r\n    );\r\n\r\n    // on locale change\r\n    this._subs.push(\r\n      this._localeService.localeChange\r\n        .subscribe(locale => this._store.dispatch(this._actions.setLocale(locale)))\r\n    )\r\n\r\n    return this;\r\n  }\r\n\r\n  destroy(): void {\r\n    for (const sub of this._subs) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDatepickerActions, },\n{type: BsLocaleService, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}