{"version":3,"sources":["../../../.tmp/datepicker/engine/flag-months-calendar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAC;AAK/D,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAC7E,OAAO,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAC;AAW7D,MAAM,6BACJ,aAAsC,EACtC,OAAiC;IAEjC,aAAa,CAAC,MAAM,CAAC,OAAO,CAC1B,UAAC,MAA+B,EAAE,QAAgB;QAChD,MAAM,CAAC,OAAO,CAAC,UAAC,KAA4B,EAAE,UAAkB;YAC9D,IAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;YAChE,IAAM,UAAU,GACd,OAAO,CAAC,UAAU;gBAClB,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;YAChE,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC5C,SAAS,WAAA;gBACT,UAAU,YAAA;aACX,CAAC,CAAC;YACH,EAAE,CAAC,CACD,KAAK,CAAC,SAAS,KAAK,QAAQ,CAAC,SAAS;gBACtC,KAAK,CAAC,UAAU,KAAK,QAAQ,CAAC,UAChC,CAAC,CAAC,CAAC;gBACD,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;YACxD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CACF,CAAC;IAEF,uCAAuC;IACvC,aAAa,CAAC,aAAa;QACzB,OAAO,CAAC,UAAU,GAAG,CAAC,IAAI,OAAO,CAAC,UAAU,KAAK,OAAO,CAAC,aAAa,CAAC;IACzE,aAAa,CAAC,cAAc;QAC1B,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,aAAa;YAC1C,OAAO,CAAC,UAAU,GAAG,CAAC,KAAK,OAAO,CAAC,aAAa,CAAC;IAEnD,aAAa,CAAC,gBAAgB,GAAG,cAAc,CAC7C,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EACxD,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,OAAO,CAChB,CAAC;IACF,aAAa,CAAC,iBAAiB,GAAG,cAAc,CAC9C,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EACvD,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,OAAO,CAChB,CAAC;IAEF,MAAM,CAAC,aAAa,CAAC;AACvB,CAAC","file":"flag-months-calendar.js","sourceRoot":"","sourcesContent":["import { isSameMonth } from '../../chronos/utils/date-getters';\r\nimport {\r\n  MonthsCalendarViewModel,\r\n  CalendarCellViewModel\r\n} from '../models/index';\r\nimport { isMonthDisabled, isYearDisabled } from '../utils/bs-calendar-utils';\r\nimport { shiftDate } from '../../chronos/utils/date-setters';\r\n\r\nexport interface FlagMonthCalendarOptions {\r\n  isDisabled: boolean;\r\n  minDate: Date;\r\n  maxDate: Date;\r\n  hoveredMonth: Date;\r\n  displayMonths: number;\r\n  monthIndex: number;\r\n}\r\n\r\nexport function flagMonthsCalendar(\r\n  monthCalendar: MonthsCalendarViewModel,\r\n  options: FlagMonthCalendarOptions\r\n): MonthsCalendarViewModel {\r\n  monthCalendar.months.forEach(\r\n    (months: CalendarCellViewModel[], rowIndex: number) => {\r\n      months.forEach((month: CalendarCellViewModel, monthIndex: number) => {\r\n        const isHovered = isSameMonth(month.date, options.hoveredMonth);\r\n        const isDisabled =\r\n          options.isDisabled ||\r\n          isMonthDisabled(month.date, options.minDate, options.maxDate);\r\n        const newMonth = Object.assign(/*{},*/ month, {\r\n          isHovered,\r\n          isDisabled\r\n        });\r\n        if (\r\n          month.isHovered !== newMonth.isHovered ||\r\n          month.isDisabled !== newMonth.isDisabled\r\n        ) {\r\n          monthCalendar.months[rowIndex][monthIndex] = newMonth;\r\n        }\r\n      });\r\n    }\r\n  );\r\n\r\n  // todo: add check for linked calendars\r\n  monthCalendar.hideLeftArrow =\r\n    options.monthIndex > 0 && options.monthIndex !== options.displayMonths;\r\n  monthCalendar.hideRightArrow =\r\n    options.monthIndex < options.displayMonths &&\r\n    options.monthIndex + 1 !== options.displayMonths;\r\n\r\n  monthCalendar.disableLeftArrow = isYearDisabled(\r\n    shiftDate(monthCalendar.months[0][0].date, { year: -1 }),\r\n    options.minDate,\r\n    options.maxDate\r\n  );\r\n  monthCalendar.disableRightArrow = isYearDisabled(\r\n    shiftDate(monthCalendar.months[0][0].date, { year: 1 }),\r\n    options.minDate,\r\n    options.maxDate\r\n  );\r\n\r\n  return monthCalendar;\r\n}\r\n"]}