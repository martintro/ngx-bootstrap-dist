{"version":3,"sources":["../../../.tmp/datepicker/engine/format-days-calendar.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AAEzD,MAAM,6BAA6B,YAA+B,EAC/B,aAAsC,EACtC,UAAkB;IACnD,MAAM,CAAC;QACL,KAAK,EAAE,YAAY,CAAC,KAAK;QACzB,UAAU,EAAE,UAAU,CACpB,YAAY,CAAC,KAAK,EAClB,aAAa,CAAC,UAAU,EACxB,aAAa,CAAC,MAAM,CACrB;QACD,SAAS,EAAE,UAAU,CACnB,YAAY,CAAC,KAAK,EAClB,aAAa,CAAC,SAAS,EACvB,aAAa,CAAC,MAAM,CACrB;QACD,WAAW,EAAE,cAAc,CACzB,YAAY,CAAC,UAAU,EACvB,aAAa,CAAC,WAAW,EACzB,aAAa,CAAC,MAAM,CACrB;QACD,QAAQ,EAAE,kBAAkB,CAAC,aAAa,CAAC,MAAM,CAAC;QAClD,KAAK,EAAE,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,IAAY,EAAE,SAAiB,IAAK,OAAA,CAAC;YACvE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,UAAC,IAAU,EAAE,QAAgB,IAAK,OAAA,CAAC;gBAChD,IAAI,MAAA;gBACJ,KAAK,EAAE,UAAU,CAAC,IAAI,EAAE,aAAa,CAAC,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC;gBACrE,UAAU,YAAA;gBACV,SAAS,WAAA;gBACT,QAAQ,UAAA;aACT,CAAC,EAN+C,CAM/C,CAAC;SACJ,CAAC,EARsE,CAQtE,CAAC;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,yBAAyB,UAAoB,EACpB,MAAc,EACd,MAAc;IAC3C,MAAM,CAAC,UAAU,CAAC,GAAG,CACnB,UAAC,IAAY,IAAK,OAAA,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAApD,CAAoD,CACvE,CAAC;AACJ,CAAC;AAED,MAAM,6BAA6B,MAAc;IAC/C,IAAM,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;IAClC,IAAM,QAAQ,GAAG,OAAO,CAAC,aAAa,EAAc,CAAC;IACrD,IAAM,cAAc,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC;IAEhD,MAAM,CAAK,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,QAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,cAAc,CAAC,EAAE;AACnF,CAAC","file":"format-days-calendar.js","sourceRoot":"","sourcesContent":["import {\r\n  DatepickerFormatOptions,\r\n  DaysCalendarModel,\r\n  DaysCalendarViewModel\r\n} from '../models/index';\r\nimport { formatDate } from '../../chronos/format';\r\nimport { getLocale } from '../../chronos/locale/locales';\r\n\r\nexport function formatDaysCalendar(daysCalendar: DaysCalendarModel,\r\n                                   formatOptions: DatepickerFormatOptions,\r\n                                   monthIndex: number): DaysCalendarViewModel {\r\n  return {\r\n    month: daysCalendar.month,\r\n    monthTitle: formatDate(\r\n      daysCalendar.month,\r\n      formatOptions.monthTitle,\r\n      formatOptions.locale\r\n    ),\r\n    yearTitle: formatDate(\r\n      daysCalendar.month,\r\n      formatOptions.yearTitle,\r\n      formatOptions.locale\r\n    ),\r\n    weekNumbers: getWeekNumbers(\r\n      daysCalendar.daysMatrix,\r\n      formatOptions.weekNumbers,\r\n      formatOptions.locale\r\n    ),\r\n    weekdays: getShiftedWeekdays(formatOptions.locale),\r\n    weeks: daysCalendar.daysMatrix.map((week: Date[], weekIndex: number) => ({\r\n      days: week.map((date: Date, dayIndex: number) => ({\r\n        date,\r\n        label: formatDate(date, formatOptions.dayLabel, formatOptions.locale),\r\n        monthIndex,\r\n        weekIndex,\r\n        dayIndex\r\n      }))\r\n    }))\r\n  };\r\n}\r\n\r\nexport function getWeekNumbers(daysMatrix: Date[][],\r\n                               format: string,\r\n                               locale: string): string[] {\r\n  return daysMatrix.map(\r\n    (days: Date[]) => (days[0] ? formatDate(days[0], format, locale) : '')\r\n  );\r\n}\r\n\r\nexport function getShiftedWeekdays(locale: string): string[] {\r\n  const _locale = getLocale(locale);\r\n  const weekdays = _locale.weekdaysShort() as string[];\r\n  const firstDayOfWeek = _locale.firstDayOfWeek();\r\n\r\n  return [...weekdays.slice(firstDayOfWeek), ...weekdays.slice(0, firstDayOfWeek)];\r\n}\r\n"]}