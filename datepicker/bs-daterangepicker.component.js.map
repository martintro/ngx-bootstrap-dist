{"version":3,"sources":["../../.tmp/datepicker/bs-daterangepicker.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACS,SAAA,EAAW,UAAA,EAAY,YAAA,EAAc,KAAA,EAChC,MAAA,EAAQ,SAAA,EAA0B,gBAAA,EACtD,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,uBAAA,EAAwB,MAAO,6BAAA,CAA8B;AACtE,OAAO,EAAE,mCAAA,EAAoC,MAAO,oDAAA,CAAqD;AAEzG,OAAO,EAAE,sBAAA,EAAuB,MAAO,8CAAA,CAA+C;AAEtF,OAAO,EAAE,kBAAA,EAAmB,MAAO,wBAAA,CAAyB;AAG5D;IAqFE,oCAAmB,OAAgC,EACvC,WAAuB,EACvB,SAAoB,EACpB,iBAAmC,EACnC,GAA2B;QAJpB,YAAO,GAAP,OAAO,CAAyB;QAnFnD;;WAEG;QACF,cAAS,GAAwC,QAAQ,CAAC;QAC3D;;;WAGG;QACF,aAAQ,GAAG,OAAO,CAAC;QACpB;;WAEG;QACF,iBAAY,GAAG,IAAI,CAAC;QACrB;;;WAGG;QACF,cAAS,GAAG,MAAM,CAAC;QAwDpB;;WAEG;QACF,kBAAa,GAAyB,IAAI,YAAY,EAAE,CAAC;QAEhD,UAAK,GAAmB,EAAE,CAAC;QAUnC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,YAAY,CACjC,WAAW,EACX,iBAAiB,EACjB,SAAS,CACV,CAAC;QACF,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IAC5C,CAAC;IAzED,sBAAI,8CAAM;QAJV;;WAEG;aAEH;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QAClC,CAAC;aAED,UAAW,KAAc;YACvB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,CAAC;QACH,CAAC;;;OARA;IAwBD,sBAAI,+CAAO;QAJX;;WAEG;aAEH,UAAY,KAAa;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;;;OAAA;IA2CD,6CAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACtB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,gDAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACtD,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACtD,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5D,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,yCAAI,GAAJ;QAAA,iBA8BC;QA7BC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW;aACnC,OAAO,CAAC,EAAC,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;aAC9D,MAAM,CAAC,mCAAmC,CAAC;aAC3C,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;aAClB,QAAQ,CAAC,EAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAC,CAAC;aACtC,IAAI,CAAC,EAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC;QAErC,uDAAuD;QACvD,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,KAAa;YACzC,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7C,CAAC,CAAC,CACH,CAAC;QAEF,8CAA8C;QAC9C,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW;aACrC,MAAM,CAAC,UAAC,KAAa,IAAK,OAAA,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAA/B,CAA+B,CAAC;aAC1D,SAAS,CAAC,UAAC,KAAa;YACvB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,8CAAS,GAAT;QACE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAC1B,EAAE,EACF,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,QAAQ,EACb;YACE,KAAK,EAAE,IAAI,CAAC,QAAQ;YACpB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO;YAC/D,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO;SAChE,CACF,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,yCAAI,GAAJ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC;QACD,GAAG,CAAC,CAAc,UAAU,EAAV,KAAA,IAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU;YAAvB,IAAM,GAAG,SAAA;YACZ,GAAG,CAAC,WAAW,EAAE,CAAC;SACnB;IACH,CAAC;IAED;;;OAGG;IACH,2CAAM,GAAN;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACrB,CAAC;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,gDAAW,GAAX;QACE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IACI,qCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,mBAAmB;iBAC9B,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,yCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,uBAAuB,GAAG;QACjC,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,SAAS,GAAG;QACnB,EAAC,IAAI,EAAE,gBAAgB,GAAG;QAC1B,EAAC,IAAI,EAAE,sBAAsB,GAAG;KAC/B,EAN6F,CAM7F,CAAC;IACK,yCAAc,GAA2C;QAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC/B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAClC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC/B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QAC9B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QAC/B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KACnC,CAAC;IACF,iCAAC;CA7OD,AA6OC,IAAA;SA7OY,0BAA0B","file":"bs-daterangepicker.component.js","sourceRoot":"","sourcesContent":["import {\r\n  ComponentRef, Directive, ElementRef, EventEmitter, Input, OnChanges,\r\n  OnDestroy, OnInit, Output, Renderer2, SimpleChanges, ViewContainerRef\r\n} from '@angular/core';\r\nimport { BsDaterangepickerConfig } from './bs-daterangepicker.config';\r\nimport { BsDaterangepickerContainerComponent } from './themes/bs/bs-daterangepicker-container.component';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { ComponentLoaderFactory } from '../component-loader/component-loader.factory';\r\nimport { ComponentLoader } from '../component-loader/component-loader.class';\r\nimport { BsDatepickerConfig } from './bs-datepicker.config';\r\n\r\n\r\nexport class BsDaterangepickerDirective\r\n  implements OnInit, OnDestroy, OnChanges {\r\n  /**\r\n   * Placement of a daterangepicker. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n   placement: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n   triggers = 'click';\r\n  /**\r\n   * Close daterangepicker on outside click\r\n   */\r\n   outsideClick = true;\r\n  /**\r\n   * A selector specifying the element the daterangepicker should be appended\r\n   * to. Currently only supports \"body\".\r\n   */\r\n   container = 'body';\r\n\r\n  /**\r\n   * Returns whether or not the daterangepicker is currently being shown\r\n   */\r\n  \r\n  get isOpen(): boolean {\r\n    return this._datepicker.isShown;\r\n  }\r\n\r\n  set isOpen(value: boolean) {\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emits an event when the daterangepicker is shown\r\n   */\r\n   onShown: EventEmitter<any>;\r\n  /**\r\n   * Emits an event when the daterangepicker is hidden\r\n   */\r\n   onHidden: EventEmitter<any>;\r\n\r\n  _bsValue: Date[];\r\n  /**\r\n   * Initial value of daterangepicker\r\n   */\r\n  \r\n  set bsValue(value: Date[]) {\r\n    if (this._bsValue === value) {\r\n      return;\r\n    }\r\n    this._bsValue = value;\r\n    this.bsValueChange.emit(value);\r\n  }\r\n\r\n  /**\r\n   * Config object for daterangepicker\r\n   */\r\n   bsConfig: Partial<BsDaterangepickerConfig>;\r\n  /**\r\n   * Indicates whether daterangepicker is enabled or not\r\n   */\r\n   isDisabled: boolean;\r\n  /**\r\n   * Minimum date which is available for selection\r\n   */\r\n   minDate: Date;\r\n  /**\r\n   * Maximum date which is available for selection\r\n   */\r\n   maxDate: Date;\r\n  /**\r\n   * Emits when daterangepicker value has been changed\r\n   */\r\n   bsValueChange: EventEmitter<Date[]> = new EventEmitter();\r\n\r\n  protected _subs: Subscription[] = [];\r\n\r\n  private _datepicker: ComponentLoader<BsDaterangepickerContainerComponent>;\r\n  private _datepickerRef: ComponentRef<BsDaterangepickerContainerComponent>;\r\n\r\n  constructor(public _config: BsDaterangepickerConfig,\r\n              _elementRef: ElementRef,\r\n              _renderer: Renderer2,\r\n              _viewContainerRef: ViewContainerRef,\r\n              cis: ComponentLoaderFactory) {\r\n    this._datepicker = cis.createLoader<BsDaterangepickerContainerComponent>(\r\n      _elementRef,\r\n      _viewContainerRef,\r\n      _renderer\r\n    );\r\n    Object.assign(this, _config);\r\n    this.onShown = this._datepicker.onShown;\r\n    this.onHidden = this._datepicker.onHidden;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this._datepicker.listen({\r\n      outsideClick: this.outsideClick,\r\n      triggers: this.triggers,\r\n      show: () => this.show()\r\n    });\r\n    this.setConfig();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!this._datepickerRef || !this._datepickerRef.instance) {\r\n      return;\r\n    }\r\n\r\n    if (changes.minDate) {\r\n      this._datepickerRef.instance.minDate = this.minDate;\r\n    }\r\n\r\n    if (changes.maxDate) {\r\n      this._datepickerRef.instance.maxDate = this.maxDate;\r\n    }\r\n\r\n    if (changes.isDisabled) {\r\n      this._datepickerRef.instance.isDisabled = this.isDisabled;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens an element’s datepicker. This is considered a “manual” triggering of\r\n   * the datepicker.\r\n   */\r\n  show(): void {\r\n    if (this._datepicker.isShown) {\r\n      return;\r\n    }\r\n\r\n    this.setConfig();\r\n\r\n    this._datepickerRef = this._datepicker\r\n      .provide({provide: BsDatepickerConfig, useValue: this._config})\r\n      .attach(BsDaterangepickerContainerComponent)\r\n      .to(this.container)\r\n      .position({attachment: this.placement})\r\n      .show({placement: this.placement});\r\n\r\n    // if date changes from external source (model -> view)\r\n    this._subs.push(\r\n      this.bsValueChange.subscribe((value: Date[]) => {\r\n        this._datepickerRef.instance.value = value;\r\n      })\r\n    );\r\n\r\n    // if date changes from picker (view -> model)\r\n    this._subs.push(\r\n      this._datepickerRef.instance.valueChange\r\n        .filter((range: Date[]) => range && range[0] && !!range[1])\r\n        .subscribe((value: Date[]) => {\r\n          this.bsValue = value;\r\n          this.hide();\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set config for daterangepicker\r\n   */\r\n  setConfig() {\r\n    this._config = Object.assign(\r\n      {},\r\n      this._config,\r\n      this.bsConfig,\r\n      {\r\n        value: this._bsValue,\r\n        isDisabled: this.isDisabled,\r\n        minDate: this.minDate || this.bsConfig && this.bsConfig.minDate,\r\n        maxDate: this.maxDate || this.bsConfig && this.bsConfig.maxDate\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Closes an element’s datepicker. This is considered a “manual” triggering of\r\n   * the datepicker.\r\n   */\r\n  hide(): void {\r\n    if (this.isOpen) {\r\n      this._datepicker.hide();\r\n    }\r\n    for (const sub of this._subs) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles an element’s datepicker. This is considered a “manual” triggering\r\n   * of the datepicker.\r\n   */\r\n  toggle(): void {\r\n    if (this.isOpen) {\r\n      return this.hide();\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this._datepicker.dispose();\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[bsDaterangepicker]',\r\n  exportAs: 'bsDaterangepicker'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDaterangepickerConfig, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'outsideClick': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'bsValue': [{ type: Input },],\n'bsConfig': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'minDate': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'bsValueChange': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}