{"version":3,"sources":["../../.tmp/datepicker/bs-datepicker-inline.component.ts"],"names":[],"mappings":"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","file":"bs-datepicker-inline.component.js","sourceRoot":"","sourcesContent":["import {\r\n  ComponentRef, Directive, ElementRef, EventEmitter, Input, OnChanges,\r\n  OnDestroy, OnInit, Output, Renderer2, SimpleChanges, ViewContainerRef\r\n} from '@angular/core';\r\nimport { ComponentLoader } from '../component-loader/component-loader.class';\r\nimport { ComponentLoaderFactory } from '../component-loader/component-loader.factory';\r\nimport { BsDatepickerInlineContainerComponent } from './themes/bs/bs-datepicker-inline-container.component';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport 'rxjs/add/operator/filter';\r\nimport { BsDatepickerInlineConfig } from './bs-datepicker-inline.config';\r\nimport { BsLocaleService } from './bs-locale.service';\r\nimport { BsDatepickerConfig, BsDatepickerDateCustomClasses } from './bs-datepicker.config';\r\n\r\n\r\nexport class BsDatepickerInlineDirective implements OnInit, OnDestroy, OnChanges {\r\n  _bsValue: Date;\r\n  /**\r\n   * Initial value of datepicker\r\n   */\r\n  \r\n  set bsValue(value: Date) {\r\n    if (this._bsValue === value) {\r\n      return;\r\n    }\r\n    this._bsValue = value;\r\n    this.bsValueChange.emit(value);\r\n  }\r\n\r\n  /**\r\n   * Config object for datepicker\r\n   */\r\n   bsConfig: Partial<BsDatepickerInlineConfig>;\r\n  /**\r\n   * Indicates whether datepicker is enabled or not\r\n   */\r\n   isDisabled: boolean;\r\n  /**\r\n   * Minimum date which is available for selection\r\n   */\r\n   minDate: Date;\r\n  /**\r\n   * Maximum date which is available for selection\r\n   */\r\n   maxDate: Date;\r\n  /**\r\n   * Date custom classes\r\n   */\r\n   dateCustomClasses: BsDatepickerDateCustomClasses[];\r\n  /**\r\n   * Emits when datepicker value has been changed\r\n   */\r\n   bsValueChange: EventEmitter<Date> = new EventEmitter();\r\n\r\n  protected _subs: Subscription[] = [];\r\n\r\n  private _datepicker: ComponentLoader<BsDatepickerInlineContainerComponent>;\r\n  private _datepickerRef: ComponentRef<BsDatepickerInlineContainerComponent>;\r\n\r\n  constructor(public _config: BsDatepickerInlineConfig,\r\n              private _elementRef: ElementRef,\r\n              _renderer: Renderer2,\r\n              _viewContainerRef: ViewContainerRef,\r\n              cis: ComponentLoaderFactory) {\r\n    // todo: assign only subset of fields\r\n    Object.assign(this, this._config);\r\n    this._datepicker = cis.createLoader<BsDatepickerInlineContainerComponent>(\r\n      _elementRef,\r\n      _viewContainerRef,\r\n      _renderer\r\n    );\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.setConfig();\r\n\r\n    this._datepickerRef = this._datepicker\r\n      .provide({provide: BsDatepickerConfig, useValue: this._config})\r\n      .attach(BsDatepickerInlineContainerComponent)\r\n      .to(this._elementRef)\r\n      .show();\r\n\r\n    // if date changes from external source (model -> view)\r\n    this._subs.push(\r\n      this.bsValueChange.subscribe((value: Date) => {\r\n        this._datepickerRef.instance.value = value;\r\n      })\r\n    );\r\n\r\n    // if date changes from picker (view -> model)\r\n    this._subs.push(\r\n      this._datepickerRef.instance.valueChange.subscribe((value: Date) => {\r\n        this.bsValue = value;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!this._datepickerRef || !this._datepickerRef.instance) {\r\n      return;\r\n    }\r\n\r\n    if (changes.minDate) {\r\n      this._datepickerRef.instance.minDate = this.minDate;\r\n    }\r\n\r\n    if (changes.maxDate) {\r\n      this._datepickerRef.instance.maxDate = this.maxDate;\r\n    }\r\n\r\n    if (changes.isDisabled) {\r\n      this._datepickerRef.instance.isDisabled = this.isDisabled;\r\n    }\r\n\r\n    if (changes.dateCustomClasses) {\r\n      this._datepickerRef.instance.dateCustomClasses = this.dateCustomClasses;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set config for datepicker\r\n   */\r\n  setConfig(): void {\r\n    this._config = Object.assign({}, this._config, this.bsConfig, {\r\n      value: this._bsValue,\r\n      isDisabled: this.isDisabled,\r\n      minDate: this.minDate || this.bsConfig && this.bsConfig.minDate,\r\n      maxDate: this.maxDate || this.bsConfig && this.bsConfig.maxDate,\r\n      dateCustomClasses: this.dateCustomClasses || this.bsConfig && this.bsConfig.dateCustomClasses\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this._datepicker.dispose();\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: 'bs-datepicker-inline',\r\n  exportAs: 'bsDatepickerInline'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDatepickerInlineConfig, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'bsValue': [{ type: Input },],\n'bsConfig': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'minDate': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'dateCustomClasses': [{ type: Input },],\n'bsValueChange': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}